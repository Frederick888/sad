name: Release

on:
  push:
    # tags:
    #   - "*"

jobs:
  build_naked:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: cargo test --verbose

      - name: Build
        run: cargo build --release

      - name: Package Artifacts
        run: |-
          chmod +x target/release/sad
          mkdir -p artifacts
          zip -j artifacts/${{ matrix.os }} target/release/sad

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: artifacts/${{ matrix.os }}.zip

  build_debs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: cargo test --verbose

  release:
    needs:
      - build_naked
      - build_debs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: True

      - name: Download Artifacts macos
        uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: artifacts

      - name: Download Artifacts ubuntu
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: artifacts

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Pip Packages
        run: pip install toml pyyaml jinja2

      - name: Set ENV
        id: set_env
        run: |-
          ./ci/ci.py --release

      - name: Create Release
        id: new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ fromJSON(steps.set_env.outputs.RELEASE_INFO).tag_name }}
          release_name: ${{ fromJSON(steps.set_env.outputs.RELEASE_INFO).release_name }}
          body: ${{ fromJSON(steps.set_env.outputs.RELEASE_INFO).release_notes }}
          draft: false
          prerelease: false

      - name: Upload Asset - Macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new_release.outputs.upload_url }}
          asset_content_type: application/zip
          asset_path: artifacts/macos-latest.zip
          asset_name: macos.zip

      - name: Upload Asset - Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new_release.outputs.upload_url }}
          asset_content_type: application/zip
          asset_path: artifacts/ubuntu-latest.zip
          asset_name: ubuntu.zip

      - name: Build Packages
        run: >-
          ./ci/release.py
          --brew-artifact=macos-latest.zip
          --brew-uri=${{ steps.new_release.outputs.html_url }}
